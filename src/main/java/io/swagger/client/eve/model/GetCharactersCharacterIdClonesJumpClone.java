/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.eve.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * jump_clone object
 */
@ApiModel(description = "jump_clone object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-10T21:17:18.195+01:00")
public class GetCharactersCharacterIdClonesJumpClone {
  @SerializedName("jump_clone_id")
  private Integer jumpCloneId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("location_id")
  private Long locationId = null;

  /**
   * location_type string
   */
  @JsonAdapter(LocationTypeEnum.Adapter.class)
  public enum LocationTypeEnum {
    STATION("station"),
    
    STRUCTURE("structure");

    private String value;

    LocationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LocationTypeEnum fromValue(String text) {
      for (LocationTypeEnum b : LocationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LocationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LocationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LocationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LocationTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("location_type")
  private LocationTypeEnum locationType = null;

  @SerializedName("implants")
  private List<Integer> implants = new ArrayList<Integer>();

  public GetCharactersCharacterIdClonesJumpClone jumpCloneId(Integer jumpCloneId) {
    this.jumpCloneId = jumpCloneId;
    return this;
  }

   /**
   * jump_clone_id integer
   * @return jumpCloneId
  **/
  @ApiModelProperty(required = true, value = "jump_clone_id integer")
  public Integer getJumpCloneId() {
    return jumpCloneId;
  }

  public void setJumpCloneId(Integer jumpCloneId) {
    this.jumpCloneId = jumpCloneId;
  }

  public GetCharactersCharacterIdClonesJumpClone name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name string
   * @return name
  **/
  @ApiModelProperty(value = "name string")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetCharactersCharacterIdClonesJumpClone locationId(Long locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * location_id integer
   * @return locationId
  **/
  @ApiModelProperty(required = true, value = "location_id integer")
  public Long getLocationId() {
    return locationId;
  }

  public void setLocationId(Long locationId) {
    this.locationId = locationId;
  }

  public GetCharactersCharacterIdClonesJumpClone locationType(LocationTypeEnum locationType) {
    this.locationType = locationType;
    return this;
  }

   /**
   * location_type string
   * @return locationType
  **/
  @ApiModelProperty(required = true, value = "location_type string")
  public LocationTypeEnum getLocationType() {
    return locationType;
  }

  public void setLocationType(LocationTypeEnum locationType) {
    this.locationType = locationType;
  }

  public GetCharactersCharacterIdClonesJumpClone implants(List<Integer> implants) {
    this.implants = implants;
    return this;
  }

  public GetCharactersCharacterIdClonesJumpClone addImplantsItem(Integer implantsItem) {
    this.implants.add(implantsItem);
    return this;
  }

   /**
   * implants array
   * @return implants
  **/
  @ApiModelProperty(required = true, value = "implants array")
  public List<Integer> getImplants() {
    return implants;
  }

  public void setImplants(List<Integer> implants) {
    this.implants = implants;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCharactersCharacterIdClonesJumpClone getCharactersCharacterIdClonesJumpClone = (GetCharactersCharacterIdClonesJumpClone) o;
    return Objects.equals(this.jumpCloneId, getCharactersCharacterIdClonesJumpClone.jumpCloneId) &&
        Objects.equals(this.name, getCharactersCharacterIdClonesJumpClone.name) &&
        Objects.equals(this.locationId, getCharactersCharacterIdClonesJumpClone.locationId) &&
        Objects.equals(this.locationType, getCharactersCharacterIdClonesJumpClone.locationType) &&
        Objects.equals(this.implants, getCharactersCharacterIdClonesJumpClone.implants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jumpCloneId, name, locationId, locationType, implants);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCharactersCharacterIdClonesJumpClone {\n");
    
    sb.append("    jumpCloneId: ").append(toIndentedString(jumpCloneId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    implants: ").append(toIndentedString(implants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

