/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.eve.api;

import io.swagger.client.eve.ApiException;
import io.swagger.client.eve.model.Forbidden;
import io.swagger.client.eve.model.GetCharactersCharacterIdBookmarks200Ok;
import io.swagger.client.eve.model.GetCharactersCharacterIdBookmarksFolders200Ok;
import io.swagger.client.eve.model.GetCorporationsCorporationIdBookmarks200Ok;
import io.swagger.client.eve.model.GetCorporationsCorporationIdBookmarksFolders200Ok;
import io.swagger.client.eve.model.InternalServerError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BookmarksApi
 */
@Ignore
public class BookmarksApiTest {

    private final BookmarksApi api = new BookmarksApi();

    
    /**
     * List bookmarks
     *
     * A list of your character&#39;s personal bookmarks  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdBookmarksTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdBookmarks200Ok> response = api.getCharactersCharacterIdBookmarks(characterId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List bookmark folders
     *
     * A list of your character&#39;s personal bookmark folders  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdBookmarksFoldersTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdBookmarksFolders200Ok> response = api.getCharactersCharacterIdBookmarksFolders(characterId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List corporation bookmarks
     *
     * A list of your corporation&#39;s bookmarks  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdBookmarksTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdBookmarks200Ok> response = api.getCorporationsCorporationIdBookmarks(corporationId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List corporation bookmark folders
     *
     * A list of your corporation&#39;s bookmark folders  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdBookmarksFoldersTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdBookmarksFolders200Ok> response = api.getCorporationsCorporationIdBookmarksFolders(corporationId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}
